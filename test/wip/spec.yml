openapi: 3.1.0
info:
  description: "BitEscrow API"
  version: "1.0.0"
  title: BitEscrow API
  termsOfService: https://bitescrow.dev/terms
  contact:
    email: contact@bitescrow.dev
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
externalDocs:
  description: Find out more about BitEscrow
  url: http://bitescrow.app
servers:
  - url: "https://bitescrow-mutiny.vercel.app"
    description: Mutinynet Server
  - url: "https://bitescrow-signet.vercel.app"
    description: Signet Server
  - url: "https://bitescrow-testnet.vercel.app"
    description: Testnet Server
tags:
  - name: contract
    externalDocs:
      description: More docs
      url: https://bitescrow.dev
  - name: deposit
    externalDocs:
      description: More docs
      url: https://bitescrow.dev
  - name: witness
    externalDocs:
      description: More docs
      url: https://bitescrow.dev
paths:
  /api/contract/{cid}/cancel:
    get:
      tags:
        - contract
      operationId: cancelContract
      summary: "cancel an existing contract"
      description: "Cancel a contract that has not yet been activated. The contract must specify a moderator key, and a signed token from the moderator key must be provided in the header of this request."
      parameters:
        - $ref: '#/components/parameters/cid'
        - $ref: '#/components/parameters/token'
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                "$ref": '#/components/schemas/ContractData'
        "400":
          description: invalid request
        "422":
          description: input failed validation
        "403":
          description: Invalid input
        "500":
          description: Server error
          
  /api/contract/create:
    post:
      tags:
        - contract
      operationId: createContract
      summary: "create a new contract"
      description: "Takes a proposal document (in JSON) as input, and returns a contract."
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ContractRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContractDataResponse"
          description: ok
        "400":
          description: Invalid request
        "422":
          description: Invalid format
        "403":
          description: Invalid input
        "500":
          description: Server error
          
  /api/contract/list:
    get:
      tags:
        - contract
      operationId: listContracts
      summary: "list contracts by pubkey"
      description: "Returns a list of contracts that include a given pubkey as a member or moderator. A signed token from the pubkey must be provided in the header of this request."
      parameters:
        - $ref: '#/components/parameters/token'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContractListResponse"
          description: ok
        "405":
          description: Invalid input
          
  /api/contract/{cid}:
    get:
      tags:
        - contract
      operationId: readContract
      summary: "read a contract"
      description: "Returns the contract data, based on the provided contract id."
      parameters:
        - $ref: '#/components/parameters/cid'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContractDataResponse"
          description: ok
        "405":
          description: Invalid input

  /api/contract/{cid}/funds:
    get:
      tags:
        - contract
      operationId: contractFunds
      summary: "list verified deposits"
      description: "Returns a list of verified deposits that are assigned to the contract."
      parameters:
        - $ref: '#/components/parameters/cid'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DepositListResponse"
          description: ok
        "405":
          description: Invalid input

  /api/contract/{cid}/submit:
    post:
      tags:
        - contract
      operationId: contractWitnessSubmit
      summary: "submit a statement"
      description: "Submit a signed witness statement to the contract. If the statement is valid, returns a receipt of the new contract state. Else, returns an error."
      parameters:
        - $ref: '#/components/parameters/cid'
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WitnessData"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ContractDataResponse"
          description: ok
        "405":
          description: Invalid input

  /api/contract/{cid}/witness:
    get:
      tags:
        - contract
      operationId: contractWitnesslist
      summary: "list verified statements"
      description: "Returns a list of verified statements that have been applied to the contract."
      parameters:
        - $ref: '#/components/parameters/cid'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WitnessListResponse"
          description: ok
        "405":
          description: Invalid input
          
  /api/deposit/list:
    get:
      tags:
        - deposit
      operationId: listDeposits
      summary: "close a deposit"
      description: "Returns the contract data, based on the provided contract id."
      parameters:
        - $ref: '#/components/parameters/token'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DepositListResponse"
          description: ok
        "405":
          description: Invalid input
          
  /api/deposit/request:
    get:
      tags:
        - deposit
      operationId: requestAccount
      summary: "request a deposit account"
      description: "Returns the contract data, based on the provided contract id."
      parameters:
        - $ref: '#/components/parameters/pubkey'
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountDataResponse"
          description: ok
        "405":
          description: Invalid input
          
  /api/deposit/register:
    post:
      tags:
        - deposit
      operationId: registerDeposit
      summary: "register a deposit"
      description: "Returns the contract data, based on the provided contract id."
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WitnessData"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DepositDataResponse"
          description: ok
        "405":
          description: Invalid input
          
  /api/deposit/{dpid}:
    get:
      tags:
        - deposit
      operationId: readDeposit
      summary: "close a deposit"
      description: "Returns the contract data, based on the provided contract id."
      parameters:
        - $ref: '#/components/parameters/dpid'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DepositDataResponse"
          description: ok
        "405":
          description: Invalid input
          
  /api/deposit/{dpid}/close:
    get:
      tags:
        - deposit
      operationId: closeDeposit
      summary: "close a deposit"
      description: "Returns the contract data, based on the provided contract id."
      parameters:
        - $ref: '#/components/parameters/dpid'
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SpendRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DepositDataResponse"
          description: ok
        "405":
          description: Invalid input

  /api/deposit/{dpid}/commit:
    post:
      tags:
        - deposit
      operationId: commitDeposit
      summary: "commit to a contract"
      description: "Returns the contract data, based on the provided contract id."
      parameters:
        - $ref: '#/components/parameters/dpid'
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CovenantData"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FundingDataResponse"
          description: ok
        "405":
          description: Invalid input
          
  /api/witness/{wid}:
    get:
      tags:
        - witness
      operationId: readWitness
      summary: "read witness statement"
      description: "Returns the contract data, based on the provided contract id."
      parameters:
        - $ref: '#/components/parameters/wid'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WitnessDataResponse"
          description: ok
        "405":
          description: Invalid input

components:

  parameters:
    cid:
      name: "cid"
      in: "path"
      required: true
      schema:
        type: string
    dpid:
      name: "dpid"
      in: "path"
      required: true
      schema:
        type: string
    pubkey:
      name: "pubkey"
      in: "query"
      required: true
      schema:
        type: string
    token:
      name: "token"
      in: "header"
      description: Signed user token
      required: true
      schema:
        type: string
    wid:
      name: "wid"
      in: "path"
      required: true
      schema:
        type: string
     
  schemas:
  
    AccountRequest:
      type: object
      properties:
        deposit_pk:
          type: string
        locktime:
          type: number
          nullable: true
        spend_xpub:
          type: string
      required:
        - deposit_pk
        - spend_xpub

    SpendRequest:
      type: object
      properties:
        feerate:
          type: number
        pnonce:
          type: string
        psig:
          type: string
      required:
        - feerate
        - pnonce
        - psig

    ContractRequest:
        type: object
        properties:
          proposal:
            $ref: '#/components/schemas/ProposalData'
          signatures:
            type: array
            items:
              type: string
            minItems: 0
            uniqueItems: true
        required:
          - proposal
    
    AccountDataResponse:
      type: object
      properties:
        account:
          $ref: '#/components/schemas/DepositAccount'

    ContractDataResponse:
      type: object
      properties:
        contract:
          $ref: '#/components/schemas/ContractData'
          
    ContractListResponse:
      type: object
      properties:
        contracts:
          type: array
          items:
            $ref: '#/components/schemas/ContractData'
            
    DepositDataResponse:
      type: object
      properties:
        deposit:
          $ref: '#/components/schemas/DepositData'

    DepositListResponse:
      type: object
      properties:
        deposits:
          type: array
          items:
            $ref: '#/components/schemas/DepositData'

    WitnessDataResponse:
      type: object
      properties:
        witness:
          $ref: '#/components/schemas/WitnessData'

    WitnessListResponse:
      type: object
      properties:
        witnesses:
          type: array
          items:
            $ref: '#/components/schemas/WitnessData'

    FundingDataResponse:
      type: object
      properties:
        contract:
          $ref: '#/components/schemas/ContractData'
        deposit:
          $ref: '#/components/schemas/DepositData'
          
    ContractData:
      type: object
      properties:
        activated:
          type: number
          nullable: true
        agent_fee:
          $ref: '#/components/schemas/PaymentEntry'
        agent_id:
          type: string
        agent_pk:
          type: string
        agent_pn:
          type: string
        balance:
          type: number
        cid:
          type: string
        deadline:
          type: number
        est_txfee:
          type: number
        est_txsize:
          type: number
        expires_at:
          type: number
          nullable: true
        feerate:
          type: number
        moderator:
          type: string
          nullable: true
        outputs:
          type: array
          items:
            $ref: '#/components/schemas/SpendTemplate'
        pending:
          type: number
        pubkeys:
          type: array
          items:
            type: string
        prop_id:
          type: string
        published:
          type: number
        settled:
          type: boolean
        settled_at:
          type: number
          nullable: true
        signatures:
          type: array
          items:
            type: string
        spent:
          type: boolean
        spent_at:
          type: number
          nullable: true
        spent_txid:
          type: string
          nullable: true
        status:
          $ref: '#/components/schemas/ContractStatus'
        subtotal:
          type: number
        terms:
          $ref: '#/components/schemas/ProposalData'
        total:
          type: number
        updated_at:
          type: number
        vm_state:
          $ref: '#/components/schemas/StateData'
          nullable: true
        vout_size:
          type: number

    ContractStatus:
      type: string
      enum:
        - published
        - funded
        - secured
        - pending
        - active
        - closed
        - spent
        - settled
        - canceled
        - expired
        - error
      
    SpendTemplate:
      type: array
      items:
        type: object
        properties:
          label:
            type: string
          txhex:
            type: string
      
    StateData:
      type: object
      # Define the structure of StateData here
 
    CovenantData:
      type: object
      properties:
        cid:
          type: string
        pnonce:
          type: string
        psigs:
          type: array
          items:
            type: object
            properties:
              label:
                type: string
              psig:
                type: string
    
    DepositAccount:
      type: object
      properties:
        acct_id:
          type: string
          description: Hash identifier for the account record.
        acct_sig:
          type: string
          description: Signature for the account record.
        address:
          type: string
          description: On-chain address for receiving funds.
        agent_id:
          type: string
          description: Identifier of the deposit agent.
        agent_pk:
          type: string
          description: Public key of the deposit agent.
        created_at:
          type: number
          description: Account creation timestamp (in seconds).
        deposit_pk:
          type: string
          description: Public key of the funder making the deposit.
        sequence:
          type: number
          description: Locktime converted into a sequence value.
        spend_xpub:
          type: string
          description: The extended key used for returning funds.
      required:
        - acct_id
        - acct_sig
        - address
        - agent_id
        - agent_pk
        - created_at
        - deposit_pk
        - sequence
        - spend_xpub
    
    DepositData:
      type: object
      properties:
        agent_id:
          type: string
        agent_pk:
          type: string
        agent_pn:
          type: string
        block_hash:
          type: string
          nullable: true
        block_height:
          type: number
          nullable: true
        block_time:
          type: number
          nullable: true
        confirmed:
          type: boolean
        covenant:
          $ref: '#/components/schemas/CovenantData'
          nullable: true
        created_at:
          type: number
        deposit_pk:
          type: string
        dpid:
          type: string
        expires_at:
          type: number
        return_psig:
          type: string
          nullable: true
        scriptkey:
          type: string
        sequence:
          type: number
        settled:
          type: boolean
        settled_at:
          type: number
          nullable: true
        spend_xpub:
          type: string
        spent:
          type: boolean
        spent_at:
          type: number
          nullable: true
        spent_txid:
          type: string
          nullable: true
        status:
          $ref: '#/components/schemas/DepositStatus'
        txid:
          type: string
        updated_at:
          type: number
        value:
          type: number
        vout:
          type: number

    DepositStatus:
      type: string
      enum:
        - reserved
        - pending
        - stale
        - open
        - locked
        - spent
        - settled
        - expired
        - error
    
    PaymentEntry:
      type: array
      items:
        type: object
        properties:
          value:
            type: number
          address:
            type: string

    PathEntry:
      type: array
      items:
        type: object
        properties:
          path:
            type: string
          value:
            type: number
          address:
            type: string

    ProgramTerms:
      type: array
      items:
        type: object
        properties:
          method:
            type: string
          actions:
            type: string
          paths:
            type: string
          params:
            type: array
            items:
              $ref: '#/components/schemas/Literal'
    
    ScheduleTerms:
      type: array
      items:
        type: object
        properties:
          stamp:
            type: number
          action:
            type: string
          path:
            type: string

    ProposalData:
      type: object
      properties:
        content:
          type: string
          nullable: true
        deadline:
          type: number
          nullable: true
        effective:
          type: number
          nullable: true
        expires:
          type: number
        feerate:
          type: number
          nullable: true
        members:
          type: array
          items:
            $ref: '#/components/schemas/MemberData'
        moderator:
          type: string
          nullable: true
        network:
          $ref: '#/components/schemas/Network'
        paths:
          type: array
          items:
            $ref: '#/components/schemas/PathEntry'
        payments:
          type: array
          items:
            $ref: '#/components/schemas/PaymentEntry'
        programs:
          type: array
          items:
            $ref: '#/components/schemas/ProgramTerms'
        schedule:
          type: array
          items:
            $ref: '#/components/schemas/ScheduleTerms'
        title:
          type: string
        value:
          type: number
        version:
          type: number
      required:
        - expires
        - members
        - network
        - paths
        - payments
        - programs
        - schedule
        - title
        - value
        - version
        
    Literal:
      types: [ string, number, boolean, null ]
      
    Network:
      type: string

    MemberData:
      type: object
      properties:
        id:
          type: string
        pub:
          type: string
        sig:
          type: string
        xpub:
          type: string
      required:
        - id
        - pub
        - sig
        - xpub
        
    WitnessData:
      type: object
      properties:
        action:
          type: string
        args:
          type: array
          items:
            $ref: '#/components/schemas/Literal'
        method:
          type: string
        path:
          type: string
        prog_id:
          type: string
        sigs:
          type: array
          items:
            type: string
        stamp:
          type: number
        wid:
          type: string
      required:
        - action
        - args
        - method
        - path
        - prog_id
        - sigs
        - stamp
        - wid